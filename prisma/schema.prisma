generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  email       String   @unique
  cpf         String   @unique
  password    String
  name        String
  phone       String
  birthDate   DateTime
  role        Role     @default(SELLER)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  soldOrders  Order[]  @relation("OrdersBySeller")
}

model Client {
  id          Int      @id @default(autoincrement())
  name        String
  address     String
  cpf         String   @unique
  phone       String
  birthDate   DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  orders      Order[]
}

model Order {
  id               Int      @id @default(autoincrement())
  orderNumber      String   @unique
  date             DateTime @default(now())
  clientId         Int?
  sellerId         Int?
  examiner         String
  lensDetails      LensDetails?
  totalValue       Float
  amountPaid       Float
  amountDue        Float
  deliveryDate     DateTime
  observations     String?
  client           Client?  @relation(fields: [clientId], references: [id], onDelete: SetNull)
  seller           User?    @relation("OrdersBySeller", fields: [sellerId], references: [id], onDelete: SetNull)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

model LensDetails {
  id                 Int      @id @default(autoincrement())
  longeOdSpherical   String? 
  longeOdCylindrical String? 
  longeOdAxis        String? 
  longeOdPrism       String? 
  longeOdDnp         String? 
  longeOeSpherical   String?
  longeOeCylindrical String?
  longeOeAxis        String?
  longeOePrism       String?
  longeOeDnp         String?
  pertoOdSpherical   String?
  pertoOdCylindrical String?
  pertoOdAxis        String?
  pertoOdPrism       String?
  pertoOdDnp         String?
  pertoOeSpherical   String?
  pertoOeCylindrical String?
  pertoOeAxis        String?
  pertoOePrism       String?
  pertoOeDnp         String?
  addition           String?  
  frameDescription   String?
  frameColor         String?
  lensType           String?
  dp                 String?
  height             String?
  lensCategory       String?
  orderId            Int      @unique
  order              Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
}

model Config {
  id           Int      @id @default(autoincrement())
  key          String   @unique
  value        String
}

enum Role {
  ADMIN
  SELLER
}
